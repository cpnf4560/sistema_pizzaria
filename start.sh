#!/bin/bash
# Script de inicializa√ß√£o da Pizzaria do Carlos

echo "üçï Iniciando Pizzaria do Carlos..."

# Verificar se Node.js est√° instalado
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js n√£o est√° instalado. Por favor, instale Node.js primeiro."
    exit 1
fi

# Verificar se MySQL est√° a correr
if ! pgrep -x "mysqld" > /dev/null; then
    echo "‚ö†Ô∏è  MySQL n√£o parece estar a correr. Certifique-se de que est√° ativo."
fi

# Iniciar backend
echo "üöÄ Iniciando backend..."
cd backend
if [ ! -d "node_modules" ]; then
    echo "üì¶ Instalando depend√™ncias..."
    npm install
fi

# Verificar se .env existe
if [ ! -f ".env" ]; then
    echo "‚ö†Ô∏è  Arquivo .env n√£o encontrado. Criando configura√ß√£o padr√£o..."
    cat > .env << EOF
DB_HOST=localhost
DB_PORT=3307
DB_USER=pizzaria_user
DB_PASSWORD=pizzaria123
DB_NAME=pizzaria
JWT_SECRET=pizzaria_secret_key_2025
PORT=3000
EOF
fi

echo "‚úÖ Backend configurado!"
echo "üì° Iniciando servidor na porta 3000..."
node src/app.js &
BACKEND_PID=$!

# Aguardar um pouco para o backend iniciar
sleep 3

# Iniciar frontend
echo "üåê Iniciando frontend na porta 8080..."
cd ../src/frontend
python3 -m http.server 8080 &
FRONTEND_PID=$!

echo ""
echo "üéâ Pizzaria do Carlos est√° ativa!"
echo "üì± Frontend: http://localhost:8080"
echo "üîß Backend:  http://localhost:3000"
echo ""
echo "Para parar os servidores:"
echo "kill $BACKEND_PID $FRONTEND_PID"
echo ""
echo "Pressione Ctrl+C para parar..."

# Aguardar sinal de interrup√ß√£o
trap "echo 'Parando servidores...'; kill $BACKEND_PID $FRONTEND_PID 2>/dev/null; exit" INT

# Manter script em execu√ß√£o
wait
